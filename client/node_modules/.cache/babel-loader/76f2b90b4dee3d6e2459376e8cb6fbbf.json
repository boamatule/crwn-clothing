{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionsTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionsTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"sources":["/Users/boamatule/Projects/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\n\nimport { \n\tfirestore, \n\tconvertCollectionsSnapshotToMap \n} from '../../firebase/firebase.utils';\n\nimport {\n\tfetchCollectionsSuccess, \n\tfetchCollectionsFailure \n} from './shop.actions';\n\nimport ShopActionsTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(\n\t\t\tconvertCollectionsSnapshotToMap, \n\t\t\tsnapshot\n\t\t);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch (error) {\n\t\tyield put(fetchCollectionsFailure(error.message))\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeLatest(\n\t\tShopActionsTypes.FETCH_COLLECTIONS_START,\n\t\tfetchCollectionsAsync\n\t);\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;EACxC,IAAI;IACH,MAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;IACA,MAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;IACA,MAAMC,cAAc,GAAG,MAAMb,IAAI,CAChCI,+BADgC,EAEhCO,QAFgC,CAAjC;IAIA,MAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;EACA,CARD,CAQE,OAAOC,KAAP,EAAc;IACf,MAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;EACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;EACxC,MAAMjB,UAAU,CACfQ,gBAAgB,CAACU,uBADF,EAEfT,qBAFe,CAAhB;AAIA;AAED,OAAO,UAAUU,SAAV,GAAsB;EAC3B,MAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}